;; ran with sbcl --noinform --load main.lisp --eval '(progn (countSpecialPrimes 1000000) (sb-ext:quit))'
(defparameter *x* 0)
(defun is_prime (n &optional (i 2))
    (if (<= n 2)
        (if (= n 2) 
            (return-from is_prime t ) 
            (return-from is_prime nil ))
        (if (= (mod n i) 0) 
            (return-from is_prime nil)
            (if (> (* i i) n)
                (return-from is_prime t)
                (is_prime n (+ i 1))))))

(defun int-size( x &optional (n 7))
    (if (and (= (floor (/ x (expt 10 n))) 0 ) (> n 0))
        (int-size x (- n 1))
        (return-from int-size (+ n 1))))

(defun round_prime( x &optional (n 0))
    (if (not (is_prime x )) 
        (return-from round_prime nil))
    (setf n (+ n 1))
    (if (= (int-size x) n)
        (return-from round_prime t)
        (round_prime (+ (* (mod x 10) (expt 10 (- (int-size x) 1))) (floor(/ x 10)) ) n)))

(defun countSpecialPrimes( x &optional (n 0))
    (if (round_prime x)  
        (setf n (+ n 1))) 
    (setf x (- x 1))
    (if (> x 1)
        (countSpecialPrimes x n)
        (write n)))